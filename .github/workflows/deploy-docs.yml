# 文档：https://docs.github.com/zh/actions/using-workflows/about-workflows
# 工作流的名称，如果省略，则使用当前文件名
name: Auto Deploy

# 从工作流生成的工作流运行的名称，如果省略，则使用提交时的commit信息
run-name: Deploy by @${{ github.actor }}

# 触发部署的条件
on:
  # 每当 push 到 master 分支时触发部署
  push:
    branches: 
      - master

# 当前流程要执行的任务，可以是多个。[build-and-deploy]就是一个任务
jobs:
  my_first_job:
    # 任务的名称，不设置则默认my_first_job
    name: build-and-deploy

    # 运行所需要的虚拟机环境
    runs-on: ubuntu-latest

    # 每个任务下的运行步骤，短横杠 - 表示一个步骤，从上至下依次执行。
    steps:
      # clone 该仓库的源码到工作流中
      - name: Clone Code
        uses: actions/checkout@v3
        with:
          # "最近更新时间"等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      # 安装 Node 环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # 选择要使用的 node 版本
          node-version: '16'

      # - name: Cache dependencies
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       **/node_modules
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      # 安装依赖
      - name: Install dependencies
        # if: steps.npm-cache.outputs.cache-hit != 'true'
        # run: yarn --frozen-lockfile
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm install

      # 运行构建脚本
      - name: Run Build Script
        run: npm run build

      # 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        # uses: JamesIves/github-pages-deploy-action@releases/v3
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # 这个 secrets.ACCESS_TOKEN 的 ACCESS_TOKEN 是根据你自己仓库里设置的字段来配置的，不要照搬
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          Branch: gh-pages
          FOLDER: docs/.vuepress/dist

      
    
      
      # 缓存 node_modules
      # - name: Cache dependencies
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: |
      #       **/node_modules
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # 部署到 GitHub Pages
      # - name: Deploy to GitHub Pages
      #   uses: crazy-max/ghaction-github-pages@v2
      #   with:
      #     # 将要部署资产的 GitHub 存储库（默认$GITHUB_REPOSITORY）
      #     repo: leoleor/leo
      #     # 部署到 gh-pages 分支
      #     target_branch: gh-pages
      #     # 打包后的资源路径
      #     build_dir: docs/.vuepress/dist
      #   env:
      #     # 这个 ACCESS_TOKEN 是根据你自己仓库里设置的字段来配置的，不要照搬
      #     GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}